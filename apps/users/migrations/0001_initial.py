# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-01-10 13:40


import django.utils.timezone
import model_utils.fields
from django.conf import settings
from django.db import migrations, models

import misc.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('dynforms', '0001_initial'),
        ('auth', '0007_alter_validators_add_error_messages'),
        ('publications', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('username', models.SlugField(unique=True)),
                ('classification', models.CharField(blank=True, choices=[(b'student', 'K-12 Student'),
                                                                         (b'undergraduate', 'Undergraduate Student'),
                                                                         (b'masters', 'Masters Student'),
                                                                         (b'doctorate', 'Doctorate Student'),
                                                                         (b'postdoc', 'Post Doctorate'),
                                                                         (b'faculty', 'Faculty'),
                                                                         (b'professional', 'Professional'),
                                                                         (b'other', 'Other')], max_length=20,
                                                    null=True)),
                ('alt_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Alternate Email')),
                ('title', models.CharField(blank=True,
                                           choices=[(b'Prof', 'Prof'), (b'Mr', 'Mr'), (b'Ms', 'Ms'), (b'Dr', 'Dr'),
                                                    (b'Sr', 'Sir')], max_length=20, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred_name',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name='Preferred First Name')),
                ('other_names', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('photo', models.URLField(blank=True, null=True)),
                ('emergency_contact',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name='Emergency Contact (Full Name)')),
                ('emergency_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('roles', misc.fields.StringListField(blank=True)),
                ('permissions', misc.fields.StringListField(blank=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('cfactor', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('address_1', models.CharField(max_length=255, verbose_name='Department')),
                ('address_2', models.CharField(blank=True, max_length=255, verbose_name='Street')),
                ('address_3', models.CharField(blank=True, max_length=255, verbose_name='Place')),
                ('city', models.CharField(max_length=100)),
                ('region', models.CharField(blank=True, max_length=100, verbose_name='Province/State/Region')),
                ('postal_code', models.CharField(blank=True, max_length=100, verbose_name='Postal/Zip Code')),
                ('country', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('sector', models.CharField(blank=True, choices=[(b'k12', 'K-12 Academic'),
                                                                 (b'academic', 'Post-Secondary Academic'),
                                                                 (b'research', 'Research'),
                                                                 (b'synchrotron', 'Synchrotron'),
                                                                 (b'government', 'Government'),
                                                                 (b'industry', 'Industry')], max_length=20, null=True)),
                ('domains',
                 misc.fields.StringListField(blank=True, null=True, verbose_name='Institutional Email Suffixes')),
                ('state', models.CharField(
                    choices=[(b'pending', 'Pending'), (b'started', 'Started'), (b'active', 'Active'),
                             (b'expired', 'Expired')], default=b'pending', max_length=20, verbose_name=b'Agreement')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='users.Institution', verbose_name='Parent Institution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('details', misc.fields.JSONField(blank=True, default={}, editable=False, null=True)),
                ('is_complete', models.BooleanField(default=False)),
                ('hash', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(max_length=250)),
                ('spec', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynforms.FormSpec')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecureLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('hash', models.CharField(max_length=50, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                       to='users.Address'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True,
                                         help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                         related_name='user_set', related_query_name='user', to='auth.Group',
                                         verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='users', to='users.Institution'),
        ),
        migrations.AddField(
            model_name='user',
            name='research_field',
            field=models.ManyToManyField(blank=True, to='publications.SubjectArea'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                         related_name='user_set', related_query_name='user', to='auth.Permission',
                                         verbose_name='user permissions'),
        ),
    ]
