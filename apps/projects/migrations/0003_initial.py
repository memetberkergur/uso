# Generated by Django 5.0.10 on 2024-12-30 20:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('beamlines', '0003_initial'),
        ('projects', '0002_initial'),
        ('proposals', '0002_initial'),
        ('samples', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='labsession',
            name='spokesperson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='labsession',
            name='team',
            field=models.ManyToManyField(related_name='lab_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Team Members'),
        ),
        migrations.AddField(
            model_name='labsession',
            name='workspaces',
            field=models.ManyToManyField(related_name='lab_sessions', to='beamlines.labworkspace'),
        ),
        migrations.AddField(
            model_name='material',
            name='controls',
            field=models.ManyToManyField(blank=True, related_name='materials', to='samples.safetycontrol'),
        ),
        migrations.AddField(
            model_name='project',
            name='beamlines',
            field=models.ManyToManyField(related_name='projects', through='projects.Allocation', to='beamlines.facility'),
        ),
        migrations.AddField(
            model_name='project',
            name='cycle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='proposals.reviewcycle', verbose_name='First Cycle'),
        ),
        migrations.AddField(
            model_name='project',
            name='delegate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='leader',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='proposal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project', to='proposals.proposal'),
        ),
        migrations.AddField(
            model_name='project',
            name='spokesperson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='submissions',
            field=models.ManyToManyField(blank=True, related_name='project', to='proposals.submission'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='projects', to='beamlines.facilitytag'),
        ),
        migrations.AddField(
            model_name='project',
            name='team',
            field=models.ManyToManyField(related_name='projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='techniques',
            field=models.ManyToManyField(blank=True, related_name='projects', to='proposals.configitem'),
        ),
        migrations.AddField(
            model_name='material',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='projects.project'),
        ),
        migrations.AddField(
            model_name='labsession',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_sessions', to='projects.project'),
        ),
        migrations.AddField(
            model_name='beamtime',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='beamtimes', to='projects.project'),
        ),
        migrations.AddField(
            model_name='allocationrequest',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocation_requests', to='projects.project'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='projects.project'),
        ),
        migrations.AddField(
            model_name='projectsample',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_samples', to='projects.material'),
        ),
        migrations.AddField(
            model_name='projectsample',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage', to='samples.sample'),
        ),
        migrations.AddField(
            model_name='material',
            name='samples',
            field=models.ManyToManyField(blank=True, related_name='projects', through='projects.ProjectSample', to='samples.sample'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='beamline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='beamlines.facility'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='cycle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='proposals.reviewcycle'),
        ),
        migrations.AddField(
            model_name='session',
            name='beamline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='beamlines.facility'),
        ),
        migrations.AddField(
            model_name='session',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='projects.project'),
        ),
        migrations.AddField(
            model_name='session',
            name='samples',
            field=models.ManyToManyField(blank=True, related_name='sessions', to='projects.projectsample'),
        ),
        migrations.AddField(
            model_name='session',
            name='spokesperson',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='session',
            name='staff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='session',
            name='team',
            field=models.ManyToManyField(related_name='sessions', to=settings.AUTH_USER_MODEL, verbose_name='Team Members'),
        ),
        migrations.AddField(
            model_name='shiftrequest',
            name='allocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift_requests', to='projects.allocation'),
        ),
        migrations.AddField(
            model_name='shiftrequest',
            name='tags',
            field=models.ManyToManyField(related_name='shift_requests', to='beamlines.facilitytag', verbose_name='Scheduling Tags'),
        ),
        migrations.AlterUniqueTogether(
            name='beamtime',
            unique_together={('project', 'beamline', 'start')},
        ),
        migrations.AlterUniqueTogether(
            name='allocation',
            unique_together={('beamline', 'cycle', 'project')},
        ),
        migrations.AlterUniqueTogether(
            name='projectsample',
            unique_together={('material', 'sample')},
        ),
        migrations.AlterUniqueTogether(
            name='reservation',
            unique_together={('beamline', 'cycle', 'kind')},
        ),
    ]
