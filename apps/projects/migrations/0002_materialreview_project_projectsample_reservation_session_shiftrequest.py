# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-01-10 13:40


import django.utils.timezone
import model_utils.fields
from django.db import migrations, models

import misc.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('proposals', '0001_initial'),
        ('projects', '0001_initial'),
        ('beamlines', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MaterialReview',
            fields=[
                ('review_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='proposals.Review')),
            ],
            options={
                'abstract': False,
            },
            bases=('proposals.review',),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('kind', models.CharField(choices=[('user', 'General Access'), ('staff', 'Staff Access'),
                                                   ('maintenance', 'Maintenance/Commissioning'),
                                                   ('purchased', 'Purchased Access'), ('beamteam', 'Beam Team'),
                                                   ('education', 'Education/Outreach')], default='user', max_length=20,
                                          verbose_name='Type')),
                ('leader_username', models.CharField(blank=True, max_length=50, null=True)),
                ('delegate_username', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.TextField(null=True)),
                ('pending_team', misc.fields.StringListField(blank=True, null=True)),
                ('details', misc.fields.JSONField(blank=True, default={}, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('state', models.CharField(
                    choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'),
                             ('expired', 'Expired')], default='pending', max_length=20)),
                ('quantity', models.CharField(blank=True, max_length=50)),
                ('expiry', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('shifts', models.IntegerField(default=0)),
                ('kind', models.CharField(choices=[('user', 'General Access'), ('staff', 'Staff Access'),
                                                   ('maintenance', 'Maintenance/Commissioning'),
                                                   ('purchased', 'Purchased Access'), ('beamteam', 'Beam Team'),
                                                   ('education', 'Education/Outreach')], max_length=20, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='start')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='end')),
                ('state', models.CharField(choices=[('ready', 'Ready'), ('live', 'Active'), ('complete', 'Complete'),
                                                    ('cancelled', 'Cancelled')], default='ready', max_length=15)),
                ('kind', models.CharField(choices=[('onsite', 'On-Site'), ('remote', 'Remote'), ('mailin', 'Mail-In')],
                                          default='onsite', max_length=15, verbose_name='Session Type')),
                ('details', misc.fields.JSONField(blank=True, default={}, editable=False, null=True)),
                ('beamline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions',
                                               to='beamlines.Facility')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions',
                                              to='projects.Project')),
                ('samples', models.ManyToManyField(blank=True, related_name='sessions', to='projects.ProjectSample')),
            ],
            options={
                'get_latest_by': 'modified',
            },
        ),
        migrations.CreateModel(
            name='ShiftRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('state',
                 models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('completed', 'Completed')],
                                  default='draft', max_length=20)),
                ('comments', models.TextField(blank=True, null=True)),
                ('justification', models.TextField(blank=True, null=True)),
                ('shift_request', models.IntegerField(default=0)),
                ('good_dates', models.TextField(blank=True, null=True)),
                ('poor_dates', models.TextField(blank=True, null=True)),
                ('allocation',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift_requests',
                                   to='projects.Allocation')),
                ('tags', models.ManyToManyField(related_name='shift_requests', to='beamlines.FacilityTag',
                                                verbose_name='Scheduling Tags')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
