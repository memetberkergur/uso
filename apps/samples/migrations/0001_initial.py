# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-01-10 13:40


import django.utils.timezone
import model_utils.fields
from django.db import migrations, models

import misc.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hazard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('signal',
                 models.CharField(blank=True, choices=[(b'warning', 'Warning'), (b'danger', 'Danger')], max_length=10)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='HazardousSubstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name=b'Name')),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='HStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('code', models.CharField(db_index=True, max_length=20, unique=True)),
                ('text', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pictogram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('code', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('code', models.CharField(db_index=True, max_length=20, unique=True)),
                ('text', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SafetyControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('category', models.CharField(
                    choices=[(b'team', 'Team Requirements'), (b'guide', 'Safety Instructions'),
                             (b'ppe', 'Personal Protection Equipment'), (b'form', 'Forms'),
                             (b'delivery', 'Material Delivery/Removal'), (b'signage', 'Signage and Permits'),
                             (b'disposal', 'Disposal and Storage')], default=b'guide', max_length=20)),
                ('kind', models.CharField(
                    choices=[(b'engineering', 'Engineering Controls'), (b'ppe', 'Personal Protection Equipment'),
                             (b'inspection', 'Equipment Inspection'), (b'administrative', 'Administrative Controls'),
                             (b'other', 'Other Controls')], default=b'engineering', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SafetyPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('code', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('name', models.CharField(max_length=255, verbose_name=b'Full Name')),
                ('source', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Source of Material')),
                ('extra',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Additional Information')),
                ('kind', models.CharField(
                    choices=[(b'', b''), (b'chemical', 'Chemical'), (b'macromolecule', 'Macromolecules'),
                             (b'geologic', 'Soil, rocks or geologic'), ('Human', [(b'human_subject', 'Human Subject'), (
                        b'human_tissue_alive', 'Human Tissue/Fluid (Living)'), (b'human_tissue', 'Human Tissue/Fluid'),
                                                                                  (b'human_other',
                                                                                   'Other Human Material')]), ('Animal',
                                                                                                               [(
                                                                                                                b'live_animal',
                                                                                                                'Live Animal'),
                                                                                                                (
                                                                                                                b'animal_tissue',
                                                                                                                'Non-Invasive Animal Tissue/Fluid (Cat A)'),
                                                                                                                (
                                                                                                                b'animal_tissue_invasive',
                                                                                                                'Invasive Animal Tissue/Fluid (Cat B+)'),
                                                                                                                (
                                                                                                                b'animal_other',
                                                                                                                'Other Animal Material')]),
                             ('Other Biological',
                              [(b'plant', 'Plant or Algae'), (b'microbe', 'Bacteria, Protozoa or Virus'),
                               (b'fungi', 'Fungi'), (b'gmo', 'Genetically Modified Organism'),
                               (b'bio_other', 'Other biological')]), (b'other', 'Other')], default=None, max_length=100,
                    verbose_name=b'Type')),
                ('state', models.CharField(
                    choices=[(b'', b''), (b'solid', 'Solid'), (b'liquid', 'Liquid'), (b'crystal', 'Crystal'),
                             (b'gas', 'Gas'), (b'frozen', 'Frozen'), (b'suspension', 'Suspension'),
                             (b'nano', 'Nano-Material'), (b'fixed', 'Fixed'), (b'other', 'Other State')], default=None,
                    max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_editable', models.BooleanField(default=True)),
                ('details', misc.fields.JSONField(blank=True, default={}, editable=False, null=True)),
                ('hazard_types',
                 models.ManyToManyField(related_name='samples', to='samples.Pictogram', verbose_name=b'Hazard Types')),
                ('hazards',
                 models.ManyToManyField(related_name='samples', to='samples.Hazard', verbose_name=b'Hazards')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('object_id', models.PositiveIntegerField()),
                ('kind', models.CharField(choices=[(b'any', 'Anyone'), (b'all', 'Everyone'), (b'optional', 'Optional')],
                                          max_length=20, verbose_name=b'Type')),
                ('content_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('permission',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements',
                                   to='samples.SafetyPermission')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
